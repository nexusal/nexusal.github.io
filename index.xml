<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dive into nexus of everything</title>
    <link>./</link>
    <description>Recent content on Dive into nexus of everything</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 Jul 2020 16:00:00 +0800</lastBuildDate>
    
	<atom:link href="./index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ted</title>
      <link>./nlp/ted/</link>
      <pubDate>Sun, 19 Jul 2020 16:00:00 +0800</pubDate>
      
      <guid>./nlp/ted/</guid>
      <description>recommend that you can open the pictures of this page in another window for more details original data library(tidyverse) library(jsonlite) library(tm) library(tidytext) library(wordcloud) library(gutenbergr) library(textdata) library(igraph) library(ggraph) library(widyr) library(topicmodels) main &amp;lt;- read.csv(&amp;#34;ted_main.csv&amp;#34;) related &amp;lt;- main$related_talks[1] %&amp;gt;% gsub(pattern = &amp;#34;&amp;#39;&amp;#34;,replacement = &amp;#34;\&amp;#34;&amp;#34;) %&amp;gt;% gsub(pattern = &amp;#34;\&amp;#34;s&amp;#34;,replacement = &amp;#34;&amp;#39;s&amp;#34;) %&amp;gt;% gsub(pattern = &amp;#34;\\s&amp;#39;s&amp;#34;,replacement = &amp;#34; \&amp;#34;s&amp;#34;) %&amp;gt;% fromJSON() tags &amp;lt;- main$tags[1] %&amp;gt;% str_extract_all(pattern = &amp;#34;\\w+&amp;#34;) %&amp;gt;% unlist() load the stopwords of english my_stop &amp;lt;- readLines(&amp;#34;english.</description>
    </item>
    
    <item>
      <title>downloading annual report of companies in china</title>
      <link>./web-crawl/scrape/</link>
      <pubDate>Sat, 18 Jul 2020 16:00:00 +0800</pubDate>
      
      <guid>./web-crawl/scrape/</guid>
      <description>library(RSelenium) library(Rwebdriver) library(dplyr) check_handle &amp;lt;- FALSE count &amp;lt;- 0 while(!check_handle || count &amp;gt; 20){ count &amp;lt;- count + 1 windows_handles &amp;lt;- remDr$getWindowHandles() if(length(windows_handles) &amp;lt; 2){ Sys.sleep(1) }else{ check_handle &amp;lt;- TRUE } remDr &amp;lt;-remoteDriver( browserName = &amp;#34;chrome&amp;#34;, remoteServerAddr = &amp;#34;localhost&amp;#34;, port = 4444L) remDr$open() url &amp;lt;-&amp;#34;http://www.cninfo.com.cn/new/index&amp;#34; remDr$navigate(url) library(rvest) webpage &amp;lt;- ead_html(remDr$getPageSource()[[1]][1]) remDr$quit() lirun &amp;lt;- remDr$findElement(using = &amp;#34;css selector&amp;#34;, value = &amp;#34;#common_top_input_obj&amp;#34;) remDr$mouseMoveToLocation(webElement = lirun) lirun$clickElement() remDr$click() webpage &amp;lt;- read_html(remDr$getPageSource()[[1]][1]) nianfen &amp;lt;- remDr$findElement(using = &amp;#34;css selector&amp;#34;, value = &amp;#34;#mainSelect&amp;#34;) nianfen$clickElement() remDr$mouseMoveToLocation(webElement = nianfen) remDr$mouseMoveToLocation(x= 0, y = 500 ,webElement = nianfen) niandu &amp;lt;- remDr$findElement(using = &amp;#34;partial link text&amp;#34;, value = &amp;#34;&amp;#34;) remDr$getWindowPosition(windowId = &amp;#34;current&amp;#34;) remDr$getWindowSize() remDr$getActiveElement() remDr$mouseMoveToLocation(webElement = nianfen) remDr$click(buttonId = 0) remDr$mouseMoveToLocation(x = 0 , y =500) remDr$mouseMoveToLocation(x = 0 , y =30) remDr$click(buttonId = 0) niandu &amp;lt;- remDr$findElement(using = &amp;#34;link text&amp;#34;, value = &amp;#34;&amp;#34;) niandu$clickElement() remDr$mouseMoveToLocation(webElement = niandu) huzhuban &amp;lt;- remDr$findElement(using = &amp;#34;partial link text&amp;#34;, value = &amp;#34;&amp;#34;) remDr$mouseMoveToLocation(webElement = huzhuban) shuru &amp;lt;- remDr$findElement(using = &amp;#34;css selector&amp;#34;, value = &amp;#34;#common_top_input_obj&amp;#34;) wenben &amp;lt;- list(&amp;#34;&amp;#34;, key = &amp;#34;enter&amp;#34;) shuru$sendKeysToElement(wenben) ###code 是股票代码 for (i in 70:3761) { code[[i]] &amp;lt;- paste0(paste0(rep(&amp;#34;0&amp;#34;,6 - nchar(all[i])),collapse = &amp;#34;&amp;#34;),all[i],collapse = &amp;#34;&amp;#34;) } ###########################  remDr$open() url &amp;lt;-&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>telco customer churn</title>
      <link>./telco_customer_churn/main/</link>
      <pubDate>Sat, 18 Jul 2020 16:00:00 +0800</pubDate>
      
      <guid>./telco_customer_churn/main/</guid>
      <description>original datasets come from kaggle, click here to check you could see the metadata in Data Explorer of every column when you scroll down library(tidyverse) library(tidyselect) library(pROC) library(randomForest) library(caret) library(cowplot) library(ggcorrplot) retention &amp;lt;- read.csv(&amp;#39;WA_Fn-UseC_-Telco-Customer-Churn.csv&amp;#39;,stringsAsFactors = FALSE) ###### checking if there are any missing value  n_miss &amp;lt;- function(x) n &amp;lt;- sum(is.na(x)) return(n) apply(retention,2,n_miss) only totalcharges has 11 missing values, consider we have more than 7000 observations , I&amp;rsquo;m just gonna discard all of these retention &amp;lt;- filter(retention,!</description>
    </item>
    
    <item>
      <title>Netfix</title>
      <link>./netfix/netfix/</link>
      <pubDate>Tue, 14 Jul 2020 09:30:00 +0800</pubDate>
      
      <guid>./netfix/netfix/</guid>
      <description>the datasets was downloaded from kaggle , you can click this to check out the original datasets library(tidyverse) library(RColorBrewer) Sys.setlocale(&amp;quot;LC_ALL&amp;quot;, &amp;quot;English&amp;quot;) ### to handle the language issue netflix &amp;lt;- read.csv(&amp;quot;netflix_titles.csv&amp;quot;, stringsAsFactors = FALSE) str(netflix) any(is.na(netflix)) netflix$type &amp;lt;- as.factor(netflix$type) netflix$rating &amp;lt;- as.factor(netflix$rating) netflix_year &amp;lt;- netflix %&amp;gt;% group_by(release_year) %&amp;gt;% summarise(n = n()) %&amp;gt;% arrange(desc(n)) ggplot(netflix_year, aes(reorder(release_year, -release_year),n)) + geom_bar(stat = &amp;quot;identity&amp;quot;,fill = &amp;quot;lightblue&amp;quot;)+ theme_bw()+ theme(axis.text.x = element_text(angle = 45, hjust = 1,size = 15))+ labs(x = &amp;quot;year&amp;quot;, y = &amp;quot;number&amp;quot;) released movie or TVshows has a outbreak since we stepped in 21 century.</description>
    </item>
    
    <item>
      <title>cash flow  of four prominent companies(original data filter by lin le)</title>
      <link>./stock/stock/</link>
      <pubDate>Mon, 13 Jul 2020 16:00:00 +0800</pubDate>
      
      <guid>./stock/stock/</guid>
      <description>this is our stocks: 603977,国泰集团
002669,康达新材
603601,再升科技
002444,巨星科技
library(tidyverse)library(RColorbrewer)cashflow &amp;lt;- read.csv(&amp;quot;FI_T61.csv&amp;quot;, stringsAsFactors = FALSE, encoding = &amp;quot;UTF-8&amp;quot;)colnames(cashflow)[1] &amp;lt;- &amp;quot;id&amp;quot;core_stock &amp;lt;- c(&amp;quot;603977&amp;quot;,&amp;quot;002669&amp;quot;,&amp;quot;603601&amp;quot;,&amp;quot;002444&amp;quot;)cashflow$id &amp;lt;- as.character(cashflow$id)for (i in 1:72350) {a &amp;lt;- nchar(cashflow[i,1])if(! a == 6 ){cashflow[i,1] &amp;lt;- paste0(paste0(rep(0,6-a),collapse = &amp;quot;&amp;quot;),cashflow[i,1])}else{}}df_core &amp;lt;- filter(cashflow, id %in% core_stock, Typrep == &amp;quot;A&amp;quot;)inputting the industrial of every stock(extract from 同花顺) industrial &amp;lt;- read.csv(&amp;quot;个股当前数据(同花顺导出).csv&amp;quot;, stringsAsFactors = FALSE)industrial[,1] &amp;lt;- str_extract(industrial[,1],pattern = &amp;quot;\\d+&amp;quot;) %&amp;gt;% unlist()industrial &amp;lt;- industrial[c(&amp;quot;代码&amp;quot;,&amp;quot;名称&amp;quot;,&amp;quot;细分行业&amp;quot;,&amp;quot;所属行业&amp;quot;)]colnames(industrial) &amp;lt;- c(&amp;quot;id&amp;quot;,&amp;quot;name&amp;quot;,&amp;quot;sub_industry&amp;quot;,&amp;quot;industry&amp;quot;)df_core &amp;lt;- df_core %&amp;gt;% left_join(industrial)cashflow &amp;lt;- left_join(cashflow, industrial)print the industry of our stocks select(df_core,id,name,sub_industry,industry) %&amp;gt;% distinct(id,.</description>
    </item>
    
  </channel>
</rss>